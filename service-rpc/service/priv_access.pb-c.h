/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: priv_access.proto */

#ifndef PROTOBUF_C_priv_5faccess_2eproto__INCLUDED
#define PROTOBUF_C_priv_5faccess_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct RndAddToEntCntRequest RndAddToEntCntRequest;
typedef struct RndAddToEntCntResponse RndAddToEntCntResponse;
typedef struct RndAddEntropyRequest RndAddEntropyRequest;
typedef struct RndAddEntropyResponse RndAddEntropyResponse;
typedef struct RndClearPoolRequest RndClearPoolRequest;
typedef struct RndClearPoolResponse RndClearPoolResponse;
typedef struct RndReseedCRNGRequest RndReseedCRNGRequest;
typedef struct RndReseedCRNGResponse RndReseedCRNGResponse;


/* --- enums --- */


/* --- messages --- */

struct  RndAddToEntCntRequest
{
  ProtobufCMessage base;
  uint32_t entcnt;
};
#define RND_ADD_TO_ENT_CNT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rnd_add_to_ent_cnt_request__descriptor) \
    , 0 }


struct  RndAddToEntCntResponse
{
  ProtobufCMessage base;
  int32_t ret;
};
#define RND_ADD_TO_ENT_CNT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rnd_add_to_ent_cnt_response__descriptor) \
    , 0 }


struct  RndAddEntropyRequest
{
  ProtobufCMessage base;
  ProtobufCBinaryData randval;
  uint32_t entcnt;
};
#define RND_ADD_ENTROPY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rnd_add_entropy_request__descriptor) \
    , {0,NULL}, 0 }


struct  RndAddEntropyResponse
{
  ProtobufCMessage base;
  int32_t ret;
};
#define RND_ADD_ENTROPY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rnd_add_entropy_response__descriptor) \
    , 0 }


struct  RndClearPoolRequest
{
  ProtobufCMessage base;
};
#define RND_CLEAR_POOL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rnd_clear_pool_request__descriptor) \
     }


struct  RndClearPoolResponse
{
  ProtobufCMessage base;
  int32_t ret;
};
#define RND_CLEAR_POOL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rnd_clear_pool_response__descriptor) \
    , 0 }


struct  RndReseedCRNGRequest
{
  ProtobufCMessage base;
};
#define RND_RESEED_CRNGREQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rnd_reseed_crngrequest__descriptor) \
     }


struct  RndReseedCRNGResponse
{
  ProtobufCMessage base;
  int32_t ret;
};
#define RND_RESEED_CRNGRESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rnd_reseed_crngresponse__descriptor) \
    , 0 }


/* RndAddToEntCntRequest methods */
void   rnd_add_to_ent_cnt_request__init
                     (RndAddToEntCntRequest         *message);
size_t rnd_add_to_ent_cnt_request__get_packed_size
                     (const RndAddToEntCntRequest   *message);
size_t rnd_add_to_ent_cnt_request__pack
                     (const RndAddToEntCntRequest   *message,
                      uint8_t             *out);
size_t rnd_add_to_ent_cnt_request__pack_to_buffer
                     (const RndAddToEntCntRequest   *message,
                      ProtobufCBuffer     *buffer);
RndAddToEntCntRequest *
       rnd_add_to_ent_cnt_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rnd_add_to_ent_cnt_request__free_unpacked
                     (RndAddToEntCntRequest *message,
                      ProtobufCAllocator *allocator);
/* RndAddToEntCntResponse methods */
void   rnd_add_to_ent_cnt_response__init
                     (RndAddToEntCntResponse         *message);
size_t rnd_add_to_ent_cnt_response__get_packed_size
                     (const RndAddToEntCntResponse   *message);
size_t rnd_add_to_ent_cnt_response__pack
                     (const RndAddToEntCntResponse   *message,
                      uint8_t             *out);
size_t rnd_add_to_ent_cnt_response__pack_to_buffer
                     (const RndAddToEntCntResponse   *message,
                      ProtobufCBuffer     *buffer);
RndAddToEntCntResponse *
       rnd_add_to_ent_cnt_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rnd_add_to_ent_cnt_response__free_unpacked
                     (RndAddToEntCntResponse *message,
                      ProtobufCAllocator *allocator);
/* RndAddEntropyRequest methods */
void   rnd_add_entropy_request__init
                     (RndAddEntropyRequest         *message);
size_t rnd_add_entropy_request__get_packed_size
                     (const RndAddEntropyRequest   *message);
size_t rnd_add_entropy_request__pack
                     (const RndAddEntropyRequest   *message,
                      uint8_t             *out);
size_t rnd_add_entropy_request__pack_to_buffer
                     (const RndAddEntropyRequest   *message,
                      ProtobufCBuffer     *buffer);
RndAddEntropyRequest *
       rnd_add_entropy_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rnd_add_entropy_request__free_unpacked
                     (RndAddEntropyRequest *message,
                      ProtobufCAllocator *allocator);
/* RndAddEntropyResponse methods */
void   rnd_add_entropy_response__init
                     (RndAddEntropyResponse         *message);
size_t rnd_add_entropy_response__get_packed_size
                     (const RndAddEntropyResponse   *message);
size_t rnd_add_entropy_response__pack
                     (const RndAddEntropyResponse   *message,
                      uint8_t             *out);
size_t rnd_add_entropy_response__pack_to_buffer
                     (const RndAddEntropyResponse   *message,
                      ProtobufCBuffer     *buffer);
RndAddEntropyResponse *
       rnd_add_entropy_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rnd_add_entropy_response__free_unpacked
                     (RndAddEntropyResponse *message,
                      ProtobufCAllocator *allocator);
/* RndClearPoolRequest methods */
void   rnd_clear_pool_request__init
                     (RndClearPoolRequest         *message);
size_t rnd_clear_pool_request__get_packed_size
                     (const RndClearPoolRequest   *message);
size_t rnd_clear_pool_request__pack
                     (const RndClearPoolRequest   *message,
                      uint8_t             *out);
size_t rnd_clear_pool_request__pack_to_buffer
                     (const RndClearPoolRequest   *message,
                      ProtobufCBuffer     *buffer);
RndClearPoolRequest *
       rnd_clear_pool_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rnd_clear_pool_request__free_unpacked
                     (RndClearPoolRequest *message,
                      ProtobufCAllocator *allocator);
/* RndClearPoolResponse methods */
void   rnd_clear_pool_response__init
                     (RndClearPoolResponse         *message);
size_t rnd_clear_pool_response__get_packed_size
                     (const RndClearPoolResponse   *message);
size_t rnd_clear_pool_response__pack
                     (const RndClearPoolResponse   *message,
                      uint8_t             *out);
size_t rnd_clear_pool_response__pack_to_buffer
                     (const RndClearPoolResponse   *message,
                      ProtobufCBuffer     *buffer);
RndClearPoolResponse *
       rnd_clear_pool_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rnd_clear_pool_response__free_unpacked
                     (RndClearPoolResponse *message,
                      ProtobufCAllocator *allocator);
/* RndReseedCRNGRequest methods */
void   rnd_reseed_crngrequest__init
                     (RndReseedCRNGRequest         *message);
size_t rnd_reseed_crngrequest__get_packed_size
                     (const RndReseedCRNGRequest   *message);
size_t rnd_reseed_crngrequest__pack
                     (const RndReseedCRNGRequest   *message,
                      uint8_t             *out);
size_t rnd_reseed_crngrequest__pack_to_buffer
                     (const RndReseedCRNGRequest   *message,
                      ProtobufCBuffer     *buffer);
RndReseedCRNGRequest *
       rnd_reseed_crngrequest__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rnd_reseed_crngrequest__free_unpacked
                     (RndReseedCRNGRequest *message,
                      ProtobufCAllocator *allocator);
/* RndReseedCRNGResponse methods */
void   rnd_reseed_crngresponse__init
                     (RndReseedCRNGResponse         *message);
size_t rnd_reseed_crngresponse__get_packed_size
                     (const RndReseedCRNGResponse   *message);
size_t rnd_reseed_crngresponse__pack
                     (const RndReseedCRNGResponse   *message,
                      uint8_t             *out);
size_t rnd_reseed_crngresponse__pack_to_buffer
                     (const RndReseedCRNGResponse   *message,
                      ProtobufCBuffer     *buffer);
RndReseedCRNGResponse *
       rnd_reseed_crngresponse__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rnd_reseed_crngresponse__free_unpacked
                     (RndReseedCRNGResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RndAddToEntCntRequest_Closure)
                 (const RndAddToEntCntRequest *message,
                  void *closure_data);
typedef void (*RndAddToEntCntResponse_Closure)
                 (const RndAddToEntCntResponse *message,
                  void *closure_data);
typedef void (*RndAddEntropyRequest_Closure)
                 (const RndAddEntropyRequest *message,
                  void *closure_data);
typedef void (*RndAddEntropyResponse_Closure)
                 (const RndAddEntropyResponse *message,
                  void *closure_data);
typedef void (*RndClearPoolRequest_Closure)
                 (const RndClearPoolRequest *message,
                  void *closure_data);
typedef void (*RndClearPoolResponse_Closure)
                 (const RndClearPoolResponse *message,
                  void *closure_data);
typedef void (*RndReseedCRNGRequest_Closure)
                 (const RndReseedCRNGRequest *message,
                  void *closure_data);
typedef void (*RndReseedCRNGResponse_Closure)
                 (const RndReseedCRNGResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct PrivAccess_Service PrivAccess_Service;
struct PrivAccess_Service
{
  ProtobufCService base;
  void (*rpc_rnd_add_to_ent_cnt)(PrivAccess_Service *service,
                                 const RndAddToEntCntRequest *input,
                                 RndAddToEntCntResponse_Closure closure,
                                 void *closure_data);
  void (*rpc_rnd_add_entropy)(PrivAccess_Service *service,
                              const RndAddEntropyRequest *input,
                              RndAddEntropyResponse_Closure closure,
                              void *closure_data);
  void (*rpc_rnd_clear_pool)(PrivAccess_Service *service,
                             const RndClearPoolRequest *input,
                             RndClearPoolResponse_Closure closure,
                             void *closure_data);
  void (*rpc_rnd_reseed_crng)(PrivAccess_Service *service,
                              const RndReseedCRNGRequest *input,
                              RndReseedCRNGResponse_Closure closure,
                              void *closure_data);
};
typedef void (*PrivAccess_ServiceDestroy)(PrivAccess_Service *);
void priv_access__init (PrivAccess_Service *service,
                        PrivAccess_ServiceDestroy destroy);
#define PRIV_ACCESS__BASE_INIT \
    { &priv_access__descriptor, protobuf_c_service_invoke_internal, NULL }
#define PRIV_ACCESS__INIT(function_prefix__) \
    { PRIV_ACCESS__BASE_INIT,\
      function_prefix__ ## rpc_rnd_add_to_ent_cnt,\
      function_prefix__ ## rpc_rnd_add_entropy,\
      function_prefix__ ## rpc_rnd_clear_pool,\
      function_prefix__ ## rpc_rnd_reseed_crng  }
void priv_access__rpc_rnd_add_to_ent_cnt(ProtobufCService *service,
                                         const RndAddToEntCntRequest *input,
                                         RndAddToEntCntResponse_Closure closure,
                                         void *closure_data);
void priv_access__rpc_rnd_add_entropy(ProtobufCService *service,
                                      const RndAddEntropyRequest *input,
                                      RndAddEntropyResponse_Closure closure,
                                      void *closure_data);
void priv_access__rpc_rnd_clear_pool(ProtobufCService *service,
                                     const RndClearPoolRequest *input,
                                     RndClearPoolResponse_Closure closure,
                                     void *closure_data);
void priv_access__rpc_rnd_reseed_crng(ProtobufCService *service,
                                      const RndReseedCRNGRequest *input,
                                      RndReseedCRNGResponse_Closure closure,
                                      void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor rnd_add_to_ent_cnt_request__descriptor;
extern const ProtobufCMessageDescriptor rnd_add_to_ent_cnt_response__descriptor;
extern const ProtobufCMessageDescriptor rnd_add_entropy_request__descriptor;
extern const ProtobufCMessageDescriptor rnd_add_entropy_response__descriptor;
extern const ProtobufCMessageDescriptor rnd_clear_pool_request__descriptor;
extern const ProtobufCMessageDescriptor rnd_clear_pool_response__descriptor;
extern const ProtobufCMessageDescriptor rnd_reseed_crngrequest__descriptor;
extern const ProtobufCMessageDescriptor rnd_reseed_crngresponse__descriptor;
extern const ProtobufCServiceDescriptor priv_access__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_priv_5faccess_2eproto__INCLUDED */
